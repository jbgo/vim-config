" Show a list of available buffers, and make it easy to switch between them
map <Leader>t :buffers<CR>:buffer!<Space>

" Delete all trailing whitespace in a file
map <Leader>ds :%s/[ <tab>]*$//<CR>

" Clean whitespace in a file (coverts tabs to spaces and deletes any trailing
" whitespace
map <Leader>cw :%s/[ <tab>]*$//<CR>:retab!<CR>

" disable jslint highlighting
let g:JSLintHighlightErrorLine = 0

" indent JSON (or at least try to)
map <Leader>j :%s/[{,\[]/\0\r/g<CR>:%s/[}\]]/\r\0/g<CR>:%s/:/: /g<CR>gg<CR>vG1000<<<CR>=G<CR>

" clear search highlighting without disabling it
map <Leader>x :noh<CR>

" convert a javascript function to its equivalent property notation
" 'function blah() {\n ...}' becomes blah: 'function() {\n ...},'
let @f='dwea: px$%a,h'

" css highlighting for less files
au BufNewFile,BufRead *.less set filetype=css autoindent

" jump out of insert mode when I start typing these patterns
inoremap hh <esc>
inoremap jj <esc>
inoremap kk <esc>
inoremap lll <esc>

" highlight the line the cursor is on
set cursorline
autocmd WinEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline

" python settings
autocmd FileType python set tabstop=4 shiftwidth=4 softtabstop=4
let python_highlight_all=1
let NERDTreeIgnore = ['\.pyc$']

" toggle back and forth between current and previous buffer
map <Leader>b :buffer#<cr>

" map F1 to ESC so I don't keep accidentally triggering the help meu
" (that's what the :help command is for!)
map <F1> <Esc>
imap <F1> <Esc>
